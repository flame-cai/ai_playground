{"version":3,"sources":["components/AuthContext.js","components/Chat.js","components/GoogleAuth.js","components/loadGoogleScript.js","components/LoginPage.js","components/protectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","token","setToken","AuthProvider","_ref","children","useState","localStorage","getItem","useEffect","setItem","console","log","removeItem","React","createElement","Provider","value","useAuth","useContext","Chat","temperature","maxTokens","messages","setMessages","input","setInput","systemMessage","setSystemMessage","messageEndRef","useRef","user","setUser","storedUser","JSON","parse","role","content","current","scrollIntoView","behavior","className","onChange","e","target","placeholder","rows","map","msg","index","key","concat","src","alt","part","idx","startsWith","replace","trim","wordTranslationsString","match","grp","String","fromCharCode","parseInt","slice","splitArray","arr","result","tempWord","fr","en","includes","push","mergePunctuations","split","element","_ref2","wIdx","word","translation","error","ref","type","onKeyDown","async","userMessage","prevMessages","response","axios","post","parseFloat","headers","data","sendMessage","GoogleSignIn","onLoginSuccess","isGoogleLoaded","setIsGoogleLoaded","Promise","resolve","document","querySelector","script","id","defer","onload","body","appendChild","loadGoogleAndInitialize","window","google","handleCredentialResponse","stringify","backendResponse","credential","accounts","initialize","client_id","callback","renderButton","getElementById","theme","size","LoginPage","isLoaded","setIsLoaded","hasReloaded","setHasReloaded","performance","navigation","checkGoogleApiLoaded","gapi","setTimeout","timer","location","reload","clearTimeout","style","display","ProtectedRoute","Navigate","to","App","setTemperature","setMaxTokens","logoutTimerRef","handleLogout","resetLogoutTimer","alert","addEventListener","removeEventListener","Router","Link","min","max","step","onClick","Routes","Fragment","Route","path","userData","expiresIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.00eb20c5.chunk.js","sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext({ token: null, setToken: () => {} });\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n\r\n  useEffect(() => {\r\n    // Whenever token changes, update localStorage\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n      console.log(token)\r\n    } else {\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);","// src/components/Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { useAuth } from './AuthContext';\n\nfunction mergePunctuations(arr) {\n  const result = [];\n  let tempWord = ['', ''];\n\n  for (const [fr, en] of arr) {\n    if ('.,!?'.includes(fr)) {\n      tempWord[0] += fr;\n      tempWord[1] += en;\n    } else {\n      if (tempWord[0]) {\n        result.push(tempWord);\n        tempWord = ['', ''];\n      }\n      tempWord = [fr, en];\n    }\n  }\n\n  if (tempWord[0]) {\n    result.push(tempWord);\n  }\n\n  return result;\n}\n\nconst Chat = ({ temperature, maxTokens }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [systemMessage, setSystemMessage] = useState('');\n  const messageEndRef = useRef(null);\n  const [user, setUser] = useState(null);\n  const { token } = useAuth();\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      setMessages([{\n        role: 'assistant',\n        content: 'Hello, I am GPT-4. AMA.'\n      }]);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (messageEndRef.current) {\n      messageEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n\n    try {\n      const response = await axios.post('https://asia-south1-ppt-tts.cloudfunctions.net/ai-backend/chat', {\n        messages: [...messages, userMessage],\n        systemMessage,\n        temperature: parseFloat(temperature),\n        maxTokens: parseInt(maxTokens)\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      console.log('Chat data:', token);\n      console.log('Server response:', response.data);\n      setMessages(prevMessages => [...prevMessages, response.data]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  const renderMessage = (content) => {\n    if (typeof content === 'string') {\n      return <p>{content}</p>;\n    }\n\n    return content.map((part, idx) => {\n      if (typeof part === 'string' && part.startsWith('[Correction]')) {\n        return <p key={idx} className=\"correction\">{part.replace('[Correction]', '').trim()}</p>;\n      } else if (typeof part === 'string' && part.startsWith('[Response]')) {\n        try {\n          let wordTranslationsString = part.replace(/\\\\u([\\dA-Fa-f]{4})/g, (match, grp) => String.fromCharCode(parseInt(grp, 16))).replace('[Response]', '').trim().replace(/\\(/g, '[').replace(/\\)/g, ']').replace(/\\\\\"/g, '').replace(/\\\\/g, '').replace(/,\\s*\\[/g,'--\\[').replace(/,/g, '--').replace(/----/g, ',--').replace(/,--\\s*--/g, ',--,').replace(/--\\]/g,',]').slice(1,-1);\n          let outerArray = wordTranslationsString.slice(2, -2).split(']--[');\n          let splitArray = mergePunctuations(outerArray.map(element => element.split('--')));\n          console.log(wordTranslationsString);\n          console.log(splitArray);\n\n          return (\n            <p key={idx} className=\"text-container\">\n              {splitArray.map(([word, translation], wIdx) => (\n                <span key={wIdx} className=\"hoverable-word\">{word + \" \"}\n                  <span className=\"tooltiptext badge badge-light\">{translation}</span>\n                </span>\n              ))}\n            </p>\n          );\n        } catch (error) {\n          console.error(\"Error parsing response:\", error);\n\n          return <p key={idx}>{part}</p>;\n        }\n      } else if (typeof part === 'string' && part.startsWith('[Translation]')) {\n        return <p key={idx} className=\"translation\">{part.replace('[Translation]', '').trim()}</p>;\n      }\n      return <p key={idx}>{part}</p>;\n    });\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h1>Conversation Tool</h1>\n      <hr />\n      \n      <div className=\"p-4 mb-4 border rounded\">\n        <h2 className=\"text-lg font-semibold mb-2\">System Message</h2>\n        <textarea\n          className=\"w-full p-2 border rounded\"\n          value={systemMessage}\n          onChange={(e) => setSystemMessage(e.target.value)}\n          placeholder=\"Enter system message here...\"\n          rows=\"3\"\n        />\n      </div>\n\n      <div className=\"message-container\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message-row ${msg.role}-row`}>\n            {msg.role === 'assistant' && (\n              <div className=\"profile-picture-container\">\n                <img src='logo192.png' alt={`${msg.role} profile picture`} className={`profile-picture`} />\n              </div>\n            )}\n            <div className={`message ${msg.role}`}>\n              {renderMessage(msg.content)}\n            </div>\n            {msg.role !== 'assistant' && (\n              <div className=\"profile-picture-container\">\n                <img src='flame_img.jpeg' alt={`${msg.role} profile picture`} className={`profile-picture`} />\n              </div>\n            )}\n          </div>\n        ))}\n        <div ref={messageEndRef} />\n      </div>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={handleKeyPress}\n          placeholder=\"Type your message...\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","// src/components/GoogleSignIn.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { loadGoogleScript } from './loadGoogleScript';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst GoogleSignIn = ({ onLoginSuccess }) => {\r\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState(false);\r\n  const { setToken } = useAuth();\r\n  useEffect(() => {\r\n    const loadGoogleAndInitialize = async () => {\r\n      await loadGoogleScript();\r\n      setIsGoogleLoaded(true);\r\n    };\r\n\r\n    loadGoogleAndInitialize();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isGoogleLoaded && window.google) {\r\n      const handleCredentialResponse = async (response) => {\r\n        console.log(\"Encoded JWT ID token: \" + JSON.stringify(response));\r\n        try {\r\n          const backendResponse = await axios.post('https://asia-south1-ppt-tts.cloudfunctions.net/ai-backend/login', {\r\n          },{\r\n            headers: {\r\n              'Authorization': `Bearer ${response.credential}`,\r\n            },\r\n          });\r\n          console.log('Login success:', backendResponse.data);\r\n          localStorage.setItem(\"token\",response.credential);\r\n          setToken(response.credential);\r\n          onLoginSuccess(backendResponse.data);\r\n        } catch (error) {\r\n          console.error('Login failed:', error);\r\n        }\r\n      };\r\n\r\n      window.google.accounts.id.initialize({\r\n        client_id: '1066118926351-dskshp8i64e3e4i5rr76h85rfbhh5cc0.apps.googleusercontent.com', // Replace with your actual client ID\r\n        callback: handleCredentialResponse\r\n      });\r\n\r\n      window.google.accounts.id.renderButton(\r\n        document.getElementById(\"googleSignInDiv\"),\r\n        { theme: \"outline\", size: \"large\" }\r\n      );\r\n    }\r\n  }, [isGoogleLoaded, onLoginSuccess]);\r\n\r\n  return <div id=\"googleSignInDiv\"></div>;\r\n};\r\n\r\nexport default GoogleSignIn;\r\n","// src/loadGoogleScript.js\r\nexport const loadGoogleScript = () => {\r\n  return new Promise((resolve) => {\r\n    if (document.querySelector('script#google-login')) {\r\n      resolve();\r\n      return;\r\n    }\r\n    const script = document.createElement('script');\r\n    script.src = 'https://accounts.google.com/gsi/client';\r\n    script.id = 'google-login';\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => resolve();\r\n    document.body.appendChild(script);\r\n  });\r\n};\r\n","// src/components/LoginPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport GoogleSignIn from './GoogleAuth';\r\nimport '../App.css'; // Import CSS for styling\r\n\r\nconst LoginPage = ({ onLoginSuccess }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [hasReloaded, setHasReloaded] = useState(false); // Track if page has been reloaded\r\n\r\n  useEffect(() => {\r\n    if (window.performance.navigation.type === 1) {\r\n      setHasReloaded(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if Google API is loaded\r\n    const checkGoogleApiLoaded = () => {\r\n      if (window.gapi && window.gapi.accounts.id) {\r\n        setIsLoaded(true);\r\n      } else {\r\n        setTimeout(checkGoogleApiLoaded, 100); // Check again after 100ms\r\n      }\r\n    };\r\n\r\n    checkGoogleApiLoaded();\r\n\r\n    // Reload the page only if it hasn't been reloaded before\r\n    if (!hasReloaded) {\r\n      const timer = setTimeout(() => {\r\n        if (!isLoaded) {\r\n          window.location.reload();\r\n        }\r\n      }, 1000); // Adjust delay as needed\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isLoaded, hasReloaded]);\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"image-container\">\r\n        <img src=\"./flame_img.jpeg\" alt=\"Logo 1\" className=\"logo-image\" />\r\n        <div className=\"vertical-line\"></div>\r\n        <img src=\"./CAI_logo.jpg\" alt=\"Logo 2\" className=\"logo-image\" />\r\n      </div>\r\n      <h1>Welcome to the AI Language Practice Application</h1>\r\n      {/* <h4><i>Built by CAI</i></h4> */}\r\n      <p>Please log in to continue</p>\r\n      <div className=\"google-signin-button\">\r\n      <div style={{ display: 'inline-block' }}>\r\n        <GoogleSignIn onLoginSuccess={onLoginSuccess} />\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst ProtectedRoute = ({ user, children }) => {\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;","// src/components/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { HashRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Chat from './components/Chat';\nimport LoginPage from './components/LoginPage';\nimport ProtectedRoute from './components/protectedRoute';\nimport { AuthProvider } from './components/AuthContext';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [temperature, setTemperature] = useState(0.3);\n  const [maxTokens, setMaxTokens] = useState(100);\n  const logoutTimerRef = useRef(null);\n\n  const handleLoginSuccess = (userData) => {\n    const { token, expiresIn } = userData;\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    resetLogoutTimer();\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    clearTimeout(logoutTimerRef.current);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  const resetLogoutTimer = () => {\n    clearTimeout(logoutTimerRef.current);\n    logoutTimerRef.current = setTimeout(() => {\n      alert('You have been logged out due to inactivity.');\n      handleLogout();\n    }, 60 * 60 * 1000);\n  };\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    window.addEventListener('mousemove', resetLogoutTimer);\n    window.addEventListener('keydown', resetLogoutTimer);\n\n    return () => {\n      window.removeEventListener('mousemove', resetLogoutTimer);\n      window.removeEventListener('keydown', resetLogoutTimer);\n      clearTimeout(logoutTimerRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      resetLogoutTimer();\n    }\n  }, [user]);\n\n  return (\n    <AuthProvider>\n    <Router>\n      <div className=\"App d-flex\">\n        {user && (\n          <nav className=\"sidebar d-flex flex-column align-items-center\">\n            <div className=\"logo my-3\">\n              <img src=\"flame_img.jpeg\" alt=\"FLAME Logo\" className=\"img-fluid\" />\n            </div>\n            <hr className=\"w-75\" />\n            <ul className=\"nav flex-column w-100 text-center\">\n              <li className=\"nav-item\">\n                <Link to=\"/conversation-companion\" className=\"nav-link\">Conversation Tool</Link>\n              </li>\n            </ul>\n            <div className=\"mt-auto w-100 p-3\">\n              <h3 className=\"text-center mb-3\">Parameters</h3>\n              <div className=\"mb-3\">\n                <label className=\"d-block mb-2\">\n                  Temperature: {temperature}\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"1\"\n                  step=\"0.1\"\n                  value={temperature}\n                  onChange={(e) => setTemperature(e.target.value)}\n                  className=\"w-100\"\n                />\n              </div>\n              <div>\n                <label className=\"d-block mb-2\">\n                  Max Tokens: {maxTokens}\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"1000\"\n                  step=\"100\"\n                  value={maxTokens}\n                  onChange={(e) => setMaxTokens(e.target.value)}\n                  className=\"w-100\"\n                />\n              </div>\n            </div>\n          </nav>\n        )}\n        <div className=\"content flex-grow-1\">\n          {user && (\n            <div className=\"logout-container\">\n              <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n            </div>\n          )}\n          <Routes>\n            {!user ? (\n              <>\n                <Route path=\"/login\" element={<LoginPage onLoginSuccess={handleLoginSuccess} />} />\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n              </>\n            ) : (\n              <>\n                <Route \n                  path=\"/conversation-companion\" \n                  element={\n                    <ProtectedRoute user={user}>\n                      <Chat \n                        temperature={temperature} \n                        maxTokens={maxTokens} \n                      />\n                    </ProtectedRoute>\n                  } \n                />\n                <Route path=\"*\" element={<Navigate to=\"/conversation-companion\" />} />\n              </>\n            )}\n          </Routes>\n        </div>\n      </div>\n    </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AuthProvider } from './components/AuthContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n    <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}